variables:
  CCACHE_DIR: ${CI_PROJECT_DIR}/ccache
  CCACHE_MAXSIZE: 2G
  CCACHE_KEY_SUFFIX: r1
  CTEST_OUTPUT_ON_FAILURE: 1

build_linux_ubuntu:
  stage: build
  image: ghcr.io/acts-project/ubuntu2204:v41

  cache:
    key: ccache-${CI_JOB_NAME_SLUG}-${HEAD_REF}-${CCACHE_KEY_SUFFIX}
    when: 'always'
    paths:
      - ${CI_PROJECT_DIR}/ccache

  artifacts:
    paths:
      - build/
    exclude:
      - build/bin/ActsUnitTest*
      - build/bin/ActsIntegrationTest*
      - build/**/*.o
    expire_in: 1 day

  script:
    - echo $PATH
    - git clone $CLONE_URL src

    - cd src
    - git checkout $HEAD_SHA
    - git submodule init
    - git submodule update

    - cd ..
    - mkdir build
    - >
      cmake -B build -S src
      -GNinja
      -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
      -DCMAKE_BUILD_TYPE=RelWithDebInfo
      -DCMAKE_CXX_FLAGS=-Werror
      -DCMAKE_CXX_STANDARD=17
      -DACTS_ENABLE_LOG_FAILURE_THRESHOLD=ON
      -DACTS_BUILD_EVERYTHING=ON
      -DACTS_BUILD_ODD=ON
      -DACTS_BUILD_EXAMPLES_PYTHON_BINDINGS=ON
      -DACTS_BUILD_EXAMPLES_EDM4HEP=ON
      -DACTS_FORCE_ASSERTIONS=ON
      -DACTS_BUILD_ANALYSIS_APPS=ON
      -DACTS_BUILD_PLUGIN_ONNX=ON
      -DACTS_BUILD_PLUGIN_ACTSVG=ON

    - ccache -z
    - cmake --build build -- -j2
    - ccache -s

linux_physmon:
  stage: test
  image: ghcr.io/acts-project/ubuntu2204:v41
  needs: [build_linux_ubuntu]

  artifacts:
    when: always
    paths:
      - src/physmon
    expire_in: 1 week

  script:
    - apt-get update && apt-get install -y git-lfs time

    - git clone $CLONE_URL src
    - cd src
    - git checkout $HEAD_SHA
    - git submodule init
    - git submodule update
    - cd ..

    - git config --global safe.directory "$GITHUB_WORKSPACE"
    - pip3 install histcmp==0.6.5 spyral-cli==1.1.0 matplotlib
    - pip3 install -r src/Examples/Scripts/requirements.txt
    - /usr/local/bin/geant4-config --install-datasets
    - source build/this_acts_withdeps.sh
    - cd src
    - CI/physmon/phys_perf_mon.sh gx2f physmon
